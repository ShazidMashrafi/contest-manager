i now need to implement persistance of internet and usb restrictions for a given user. It should do the following two things:

1. Auto apply restrcions after every reboot or better yet ensure the restrictions don't get deleted because of reboots.
2. Auto update the internet restrictions as ip tables may get outdated for every 30 mins.

implementation:

1. #file:restrict.py will call #file:ensure_persistence.py with a specific 'user' to ensure persistance on, it will also provide the blacklist file dir.
2. The #file:ensure_persistence.py will create a proper systemmd to ensure persistance of internet and usb device accross reboots using #sym:persistence_across_reboots
3. It will create another systemmd to run every 30 mins via #sym:update_restrictions

the #sym:persistence_across_reboots and #sym:update_restrictions will not be the same as direct #file:restrict.py

1. #sym:persistence_across_reboots should ensure the restrcitions of internet and usb gets auto applied after reboots. it won't clear iptables and create new ones. use the old ones created, so the restrctions could be applied asap.
2. the #sym:update_restrictions should not delete the old iptables, instead run #sym:restrict_internet and append any new ones to the iptables. don't need to touch usb restrictions here.

use the #file:internet_handler.py #file:usb_handler.py to impelement the functions needed for the #sym:persistence_across_reboots and #sym:update_restrictions,, create new ones, update old or use old ones if can be.
ensure that there is no import errors when creating the systemmd. I currently install the package via #file:install.sh .
Don't jump to conclusions. Just do what is asked.